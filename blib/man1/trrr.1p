.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "TRRR 1p"
.TH TRRR 1p "2023-09-04" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
trrr \- search torrents
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Tool for searching torrents. Results are sorted by number of seeders and each is mapped to keyboard key. Pressing the key will open magnet link in your default torrent client. On iOS magnet link is placed into clipboard instead.
.SH "USAGE"
.IX Header "USAGE"
\&\- Search with as many keywords as needed. Uses piratebay by default.
.Sp
.RS 10
\&\f(CW\*(C`trrr keyword1 keyword2 keywordN\*(C'\fR
.RE
.PP
\&\- To use different torrent source add one of the following options.
.Sp
.RS 10
\&\f(CW\*(C`\-R\*(C'\fR rarbg
.Sp
\&\f(CW\*(C`\-Y\*(C'\fR yts
.Sp
\&\f(CW\*(C`\-K\*(C'\fR kickasstorrents
.Sp
\&\f(CW\*(C`\-E\*(C'\fR extratorrents
.Sp
\&\f(CW\*(C`\-X\*(C'\fR 1337x
.Sp
\&\f(CW\*(C`\-L\*(C'\fR limetorrents
.RE
.PP
\&\- On Linux, start it without any parameter and it'll use clipboard content as keywords. ( needs 'xclip' or 'xsel' to be installed )
.Sp
.RS 10
\&\f(CW\*(C`trrr\*(C'\fR
.RE
.PP
\&\- Limit results which have at least 100 seeders:
.Sp
.RS 10
\&\f(CW\*(C`trrr keyword1 keyword2 keywordN \-100\*(C'\fR
.RE
.PP
\&\- To automaticaly open some magnet link from results add its key \-[a\-o] as an option. So to open first magnet link use following command.
.Sp
.RS 10
\&\f(CW\*(C`trrr keyword1 keyword2 keywordN \-a\*(C'\fR
.RE
.PP
On Windows running 'Git/Bash for Windows' you have to specify key upfront so first make search without any option to see the results, then repeat the command and add key \-[a\-o] as anoption.
.PP
\&\- See help
.Sp
.RS 10
\&\f(CW\*(C`trrr \-help\*(C'\fR
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Zdenek Bohunek. <zdenek@cpan.org>
.PP
App::Trr::HotKey is taken from StackOverflow post by brian d foy
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2016 by Zdenek Bohunek
.PP
This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
